<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Blockchain - 分类 - Lucas's Blog</title><link>https://www.lucas6.xyz/categories/blockchain/</link><description>一个专注于区块链安全/密码学和开发工具的技术博客. | A technical blog focused on blockchain security, cryptography, and developer tools.</description><generator>Hugo 0.147.7 &amp; FixIt v0.4.0-alpha-20250721024521-a1cd700b</generator><language>en</language><lastBuildDate>Mon, 28 Jul 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://www.lucas6.xyz/categories/blockchain/index.xml" rel="self" type="application/rss+xml"/><item><title>基于 YubiKey 的冷钱包探索 2：使用 GPG 私钥生成以太坊地址</title><link>https://www.lucas6.xyz/posts/20252807660130/</link><pubDate>Mon, 28 Jul 2025 00:00:00 +0000</pubDate><guid>https://www.lucas6.xyz/posts/20252807660130/</guid><category domain="https://www.lucas6.xyz/categories/blockchain/">Blockchain</category><category domain="https://www.lucas6.xyz/categories/security/">Security</category><description>&lt;h2 class="heading-element" id="背景与前文回顾">&lt;span>背景与前文回顾&lt;/span>
 &lt;a href="#%e8%83%8c%e6%99%af%e4%b8%8e%e5%89%8d%e6%96%87%e5%9b%9e%e9%a1%be" class="heading-mark">
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true">&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z">&lt;/path>&lt;/svg>
 &lt;/a>
&lt;/h2>&lt;p>本文是 &lt;a href="https://lucas5.xyz/posts/20252707660129/"target="_blank" rel="external nofollow noopener noreferrer">基于 YubiKey 的冷钱包探索:使用 GPG 公钥生成以太坊地址&lt;/a> 的延续.&lt;/p></description></item><item><title>用 bitcoin2john 和 hashcat 爆破 wallet.dat 密码</title><link>https://www.lucas6.xyz/posts/20252607660128/</link><pubDate>Sat, 26 Jul 2025 00:00:00 +0000</pubDate><guid>https://www.lucas6.xyz/posts/20252607660128/</guid><category domain="https://www.lucas6.xyz/categories/blockchain/">Blockchain</category><category domain="https://www.lucas6.xyz/categories/security/">Security</category><description>&lt;p>在较早期的 Bitcoin Core 钱包中,私钥是保存在一个名为 &lt;code>wallet.dat&lt;/code> 的加密文件里.很多人在创建钱包时设置了密码用于保护私钥,但多年之后很可能已经忘记了当初的密码.如果没有这个密码,&lt;code>wallet.dat&lt;/code> 是无法解锁的.&lt;/p></description></item><item><title>本地构造TronTransaction转账交易</title><link>https://www.lucas6.xyz/posts/20252507660127/</link><pubDate>Fri, 25 Jul 2025 22:30:00 +0800</pubDate><guid>https://www.lucas6.xyz/posts/20252507660127/</guid><category domain="https://www.lucas6.xyz/categories/blockchain/">Blockchain</category><category domain="https://www.lucas6.xyz/categories/tron/">TRON</category><category domain="https://www.lucas6.xyz/categories/python/">Python</category><description>&lt;p>在实际开发中,某些场景要求我们对交易过程具备更高的可控性与安全性.比如在硬件钱包中使用私钥签名,或在冷隔离环境下进行离线交易构造时,必须避免依赖 TRON 节点的 &lt;code>createtransaction&lt;/code> 接口.这就需要我们&lt;strong>在本地构造交易结构、手动填入区块数据并完成签名&lt;/strong>,再广播至主网.&lt;/p></description></item><item><title>从签名中恢复账户公钥</title><link>https://www.lucas6.xyz/posts/2025060560122/</link><pubDate>Tue, 06 May 2025 00:00:00 +0000</pubDate><guid>https://www.lucas6.xyz/posts/2025060560122/</guid><category domain="https://www.lucas6.xyz/categories/blockchain/">Blockchain</category><category domain="https://www.lucas6.xyz/categories/security/">Security</category><description>&lt;p>文中所有数据为虚构,可根据实际情况从区块链获取.&lt;/p>
&lt;h4 class="heading-element" id="注意使用助记词bip39bip44生成的地址使用了path每个地址的公钥也不同即不同的链的公钥和私钥是不同的不适合使用该方法无法使用公钥跨链追踪">&lt;span>注意:使用助记词(bip39/bip44)生成的地址使用了path,每个地址的公钥也不同(即不同的链的公钥和私钥是不同的),不适合使用该方法(无法使用公钥跨链追踪).&lt;/span>
 &lt;a href="#%e6%b3%a8%e6%84%8f%e4%bd%bf%e7%94%a8%e5%8a%a9%e8%ae%b0%e8%af%8dbip39bip44%e7%94%9f%e6%88%90%e7%9a%84%e5%9c%b0%e5%9d%80%e4%bd%bf%e7%94%a8%e4%ba%86path%e6%af%8f%e4%b8%aa%e5%9c%b0%e5%9d%80%e7%9a%84%e5%85%ac%e9%92%a5%e4%b9%9f%e4%b8%8d%e5%90%8c%e5%8d%b3%e4%b8%8d%e5%90%8c%e7%9a%84%e9%93%be%e7%9a%84%e5%85%ac%e9%92%a5%e5%92%8c%e7%a7%81%e9%92%a5%e6%98%af%e4%b8%8d%e5%90%8c%e7%9a%84%e4%b8%8d%e9%80%82%e5%90%88%e4%bd%bf%e7%94%a8%e8%af%a5%e6%96%b9%e6%b3%95%e6%97%a0%e6%b3%95%e4%bd%bf%e7%94%a8%e5%85%ac%e9%92%a5%e8%b7%a8%e9%93%be%e8%bf%bd%e8%b8%aa" class="heading-mark">
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true">&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z">&lt;/path>&lt;/svg>
 &lt;/a>
&lt;/h4>&lt;p>本文代码已托管：
📎 &lt;a href="https://github.com/lucas556/Blockchain-Tools/blob/main/TRON/sig2pub.py"target="_blank" rel="external nofollow noopener noreferrer">https://github.com/lucas556/Blockchain-Tools/blob/main/TRON/sig2pub.py&lt;/a>&lt;/p></description></item><item><title>基于区块链交易公钥在多链进行跨链追查：原理与实践</title><link>https://www.lucas6.xyz/posts/20252802660126/</link><pubDate>Fri, 28 Feb 2025 01:00:00 +0800</pubDate><guid>https://www.lucas6.xyz/posts/20252802660126/</guid><category domain="https://www.lucas6.xyz/categories/blockchain/">Blockchain</category><category domain="https://www.lucas6.xyz/categories/multi-chain/">Multi-Chain</category><category domain="https://www.lucas6.xyz/categories/security/">Security</category><description>&lt;p>随着区块链技术的不断发展,越来越多的项目和资金分散在不同的区块链网络中.对于合规审计、安全追踪和资金流动分析等场景,如何确定同一个私钥是否在多条链上产生实际交易,往往是突破口之一.本文将介绍一个&lt;strong>普适的技术思路&lt;/strong>：通过在某条链(如以太坊)获取交易公钥,再将其转换到另一条采用相同椭圆曲线(secp256k1)的链(如比特币),进而在该链上验证是否有对应的签名交易,从而确认是否确系同一私钥所控.&lt;/p></description></item><item><title>Generating Blockchain Private Key</title><link>https://www.lucas6.xyz/posts/20242310660125/</link><pubDate>Wed, 23 Oct 2024 00:00:00 +0800</pubDate><guid>https://www.lucas6.xyz/posts/20242310660125/</guid><category domain="https://www.lucas6.xyz/categories/blockchain/">Blockchain</category><category domain="https://www.lucas6.xyz/categories/python/">Python</category><category domain="https://www.lucas6.xyz/categories/security/">Security</category><description>&lt;h2 class="heading-element" id="introduction">&lt;span>Introduction&lt;/span>
 &lt;a href="#introduction" class="heading-mark">
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true">&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z">&lt;/path>&lt;/svg>
 &lt;/a>
&lt;/h2>&lt;p>One of the most critical aspects of blockchain technology is cryptographic security，and private key generation is essential for safeguarding users&amp;rsquo; assets．In this post，we will explore how to use Python to generate a 256-bit blockchain private key and convert it into a hexadecimal representation．This simple Python code leverages built-in libraries like &lt;code>os&lt;/code> and &lt;code>functools&lt;/code>，making it easy to understand，especially for beginners．&lt;/p></description></item></channel></rss>